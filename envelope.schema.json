{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/envelope.schema.json",
  "title": "Agent Envelope",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "envelope_id": {"type": "string"},
    "timestamp": {"type": "string", "format": "date-time"},
    "state": {
      "type": "string",
      "enum": ["message", "tool", "plan", "finish", "ask_human", "wait", "handoff", "reflect", "error"]
    },
    "brief_rationale": {"type": "string"},
    "conversation": {
      "type": "object",
      "properties": {
        "utterance": {"type": "string"},
        "dialogue_act": {"type": "string"},
        "target": {"type": "string"}
      }
    },
    "meta": {
      "type": "object",
      "properties": {
        "budget": {"type": "object"},
        "risk": {"type": "object"},
        "goal_update": {"type": "object"},
        "todo_update": {
          "type": "object",
          "properties": {
            "action": {"type": "string", "enum": ["add", "remove", "complete", "update"]},
            "todo": {
              "type": "object",
              "properties": {
                "id": {"type": "string"},
                "content": {"type": "string"},
                "status": {"type": "string", "enum": ["pending", "in_progress", "completed"]},
                "priority": {"type": "string", "enum": ["low", "medium", "high"]},
                "related_files": {"type": "array", "items": {"type": "string"}},
                "notes": {"type": "string"},
                "dependencies": {"type": "array", "items": {"type": "string"}},
                "created_at": {"type": "string", "format": "date-time"},
                "updated_at": {"type": "string", "format": "date-time"}
              },
              "required": ["id", "content", "status"]
            },
            "reason": {"type": "string"}
          },
          "required": ["action", "todo"]
        }
      }
    }
  },
  "required": ["state", "brief_rationale"],
  "allOf": [
    {
      "if": {"properties": {"state": {"const": "tool"}}},
      "then": {
        "required": ["tool", "arguments"],
        "properties": {
          "tool": {"type": "string"},
          "arguments": {"type": "object"},
          "server_label": {"type": "string"}
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "message"}}},
      "then": {
        "required": ["conversation"],
        "properties": {
          "conversation": {
            "type": "object",
            "required": ["utterance"],
            "properties": {
              "utterance": {"type": "string"},
              "dialogue_act": {"type": "string"},
              "target": {"type": "string"}
            }
          }
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "plan"}}},
      "then": {
        "required": ["plan"],
        "properties": {
          "plan": {
            "type": "object",
            "required": ["root_task", "steps"],
            "properties": {
              "root_task": {"type": "string"},
              "steps": {"type": "array"},
              "execution_mode": {"type": "string"},
              "confidence": {"type": "number"},
              "revision": {"type": "number"}
            }
          }
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "ask_human"}}},
      "then": {
        "required": ["reason"],
        "properties": {
          "reason": {"type": "string"},
          "fields": {"type": "array"}
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "wait"}}},
      "then": {
        "required": ["wait"],
        "properties": {
          "wait": {
            "type": "object",
            "required": ["event_type"],
            "properties": {
              "event_type": {"type": "string"},
              "timeout": {"type": "number"}
            }
          }
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "finish"}}},
      "then": {
        "required": ["finish"],
        "properties": {
          "finish": {
            "type": "object",
            "required": ["summary"],
            "properties": {
              "summary": {"type": "string"},
              "artifacts": {"type": "array"}
            }
          }
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "handoff"}}},
      "then": {
        "required": ["handoff"],
        "properties": {
          "handoff": {
            "type": "object",
            "required": ["to_agent", "message"],
            "properties": {
              "to_agent": {"type": "string"},
              "message": {"type": "string"},
              "context": {"type": "object"}
            }
          }
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "reflect"}}},
      "then": {
        "required": ["reflect"],
        "properties": {
          "reflect": {
            "type": "object",
            "required": ["analysis"],
            "properties": {
              "analysis": {"type": "string"},
              "next_action": {"type": "object"}
            }
          }
        }
      }
    },
    {
      "if": {"properties": {"state": {"const": "error"}}},
      "then": {
        "required": ["error"],
        "properties": {
          "error": {
            "type": "object",
            "required": ["error_type", "error_message"],
            "properties": {
              "error_type": {"type": "string"},
              "error_message": {"type": "string"},
              "suggested_repair": {"type": "string"}
            }
          }
        }
      }
    }
  ]
}

